{"componentChunkName":"component---src-templates-blog-post-js","path":"/ML/chapter1-1/","result":{"data":{"site":{"siteMetadata":{"title":"KunheeKim.Dev","author":"[Kunhee Kim]","siteUrl":"https://kunheekimkr.github.io","comment":{"disqusShortName":"","utterances":"kunheekimkr/kunheekimkr.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"5dfb5210-1aa5-5357-92f7-84bff3efbe5f","excerpt":"1. 머신러닝의 개념 이란 애플리케이션을 수정하지 않고도 데이터를 기반으로 패턴을 학습하고 결과를 예측하는 알고리즘 기법을 통칭합니다.\n머신러닝 알고리즘은 자연어 처리, 데이터 마이닝, 영상 및 음성 인식 등의 다양한 분야에서 데이터를 기반으로 숨겨진 패턴을 인지해 주어진 문제를 해결합니다. 머신러닝은 크게 지도학습, 비지도학습, 강화학습으로 구분합니다. 이란 정답 라벨이 있는 데이터를 학습시키는 것으로, 입력 값(X) 와 그 입력 값에 대응하는 정답 (Y…","html":"<h2 id=\"1-머신러닝의-개념\" style=\"position:relative;\"><a href=\"#1-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"1 머신러닝의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 머신러닝의 개념</h2>\n<p><code class=\"language-text\">머신러닝 (Machine Learning)</code>이란 애플리케이션을 수정하지 않고도 데이터를 기반으로 패턴을 학습하고 결과를 예측하는 알고리즘 기법을 통칭합니다.\n머신러닝 알고리즘은 자연어 처리, 데이터 마이닝, 영상 및 음성 인식 등의 다양한 분야에서 데이터를 기반으로 숨겨진 패턴을 인지해 주어진 문제를 해결합니다.</p>\n<p>머신러닝은 크게 지도학습, 비지도학습, 강화학습으로 구분합니다.</p>\n<p><code class=\"language-text\">지도 학습(Supervised Learning)</code>이란 정답 라벨이 있는 데이터를 학습시키는 것으로, 입력 값(X) 와 그 입력 값에 대응하는 정답 (Y) 를 주어 학습시켜 새로운 입력 값에 대응하는 정답을 찾는 것을 목표로 합니다. 대표적인 예로 분류, 회귀, 추천 시스템, NLP 등이 있습니다.</p>\n<p><code class=\"language-text\">비지도 학습(Un-supervised Learning)</code>이란 정답 라벨이 없는 데이터를 학습시키는 것으로, 비슷한 특징끼리 군집화하여 새로운 데이터에 대한 결과를 예측하는 것을 목표로 합니다. 대표적인 예로 클러스터링, 차원 축소 등이 있습니다.</p>\n<p><code class=\"language-text\">강화 학습(Reinforcement Learning)</code>이란 앞선 두 학습 방법과 달리, 에이전트가 행동을 취하고 그 행동에 대한 보상을 받으며 최대한 큰 보상을 받기 위한 행동을 스스로 학습하는 방식을 말합니다.</p>\n<p>머신러닝에서 알고리즘만큼이나 중요한 요소가 <code class=\"language-text\">데이터</code> 입니다. 머신러닝의 가장 큰 단점은 데이터에 매우 의존적이라는 것이기 때문에, 올바른 학습 결과를 얻기 위해서는 최적의 머신러닝 알고리즘과 모델 파라미터를 구축하는 능력만큼 데이터를 올바르고 효율적으로 가공, 처리, 추출하는 능력 역시 매우 중요합니다.</p>\n<h2 id=\"2-파이썬-머신러닝-생태계를-구성하는-주요-패키지\" style=\"position:relative;\"><a href=\"#2-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%EC%83%9D%ED%83%9C%EA%B3%84%EB%A5%BC-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%ED%8C%A8%ED%82%A4%EC%A7%80\" aria-label=\"2 파이썬 머신러닝 생태계를 구성하는 주요 패키지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 파이썬 머신러닝 생태계를 구성하는 주요 패키지</h2>\n<p>머신러닝 프로그램을 작성하는데 가장 많이 사용되는 프로그램 언어는 파이썬과 R입니다. 이 책은 그중 파이썬을 이용한 머신러닝을 다루고 있으며, 저 또한 파이썬이 더 익숙하기 때문에 이 책을 골랐습니다. 이 책에서는 <code class=\"language-text\">scikit-learn</code> (머신러닝), <code class=\"language-text\">numpy</code> &#x26; <code class=\"language-text\">scipy</code> (선형대수/통계), <code class=\"language-text\">pandas</code> (데이터 핸들링), <code class=\"language-text\">matplotlib</code> &#x26; <code class=\"language-text\">seaborn</code> (시각화) 등을 사용하여 머신 러닝 프로그램을 작성하는 법을 익힙니다.</p>\n<p>저는 <code class=\"language-text\">Windows 10</code> 에서 <code class=\"language-text\">Anaconda</code> 를 통해 실습 환경을 구성하여 <code class=\"language-text\">python 3.8.12</code> 버전에서 <code class=\"language-text\">jupyter notebook</code>을 이용해 실습을 진행하였습니다.</p>\n<h2 id=\"3-넘파이numpy\" style=\"position:relative;\"><a href=\"#3-%EB%84%98%ED%8C%8C%EC%9D%B4numpy\" aria-label=\"3 넘파이numpy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 넘파이(Numpy)</h2>\n<p>머신러닝의 주요 알고리즘은 선형대수와 통계에 기반합니다. <code class=\"language-text\">Numpy</code> 패키지를 통해 파이썬에서 선형대수 연산을 쉽게 수행할 수 있기 때문에 대부분의 머신러닝 알고리즘이 넘파이 기반으로 작성되어 있고 입력과 출력 데이터를 넘파이 배열 타입으로 사용합니다. 넘파이를 이해하는 것은 파이썬 기반의 머신러닝에서 매우 중요합니다.</p>\n<h3 id=\"31-넘파이-ndarray-개요\" style=\"position:relative;\"><a href=\"#31-%EB%84%98%ED%8C%8C%EC%9D%B4-ndarray-%EA%B0%9C%EC%9A%94\" aria-label=\"31 넘파이 ndarray 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 넘파이 ndarray 개요</h3>\n<p>Numpy 패키지를 사용하기 위해서 다음과 같이 Numpy를 임포트합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</code></pre></div>\n<p>Numpy 의 <code class=\"language-text\">array()</code> 함수를 통해 파이썬의 리스트로 인자를 입력을 받아 <code class=\"language-text\">ndarray</code> 형태의 변환할 수 있습니다. <code class=\"language-text\">ndarray</code> 배열의 <code class=\"language-text\">shape</code> 변수를 이용해 행과 열의 수를 튜플 형태로 받고 배열의 차원을 알 수 있습니다. 열과 행에 대한 정보 없이 차원만 알고 싶을 때에는 <code class=\"language-text\">ndim</code> 변수를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array1<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array1 type:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array1 array 형태:'</span><span class=\"token punctuation\">,</span> array1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\narray2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array2 type:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>array2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array2 array 형태:'</span><span class=\"token punctuation\">,</span> array2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\narray3<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array3 type:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>array3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array3 array 형태:'</span><span class=\"token punctuation\">,</span> array3<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">array1 type: &lt;class 'numpy.ndarray'>\narray1 array 형태: (3,)\narray2 type: &lt;class 'numpy.ndarray'>\narray2 array 형태: (2, 3)\narray3 type: &lt;class 'numpy.ndarray'>\narray3 array 형태: (1, 3)\narray1: 1차원, array2: 2차원, array3:  2차원</code></pre></div>\n<p>간단한 예제입니다. 주의하여야 할 점은 array1과 array3은 서로 다르다는 것입니다. array1은 3개의 원소로 이루어진 1차원의 array이며, array3은 1개의 행과 3개의 열로 이루어진 2차원 array입니다.</p>\n<h2 id=\"32-ndarray의-데이터-타입\" style=\"position:relative;\"><a href=\"#32-ndarray%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"32 ndarray의 데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 ndarray의 데이터 타입</h2>\n<p>서로 다른 데이터 타입을 저장할 수 있는 <code class=\"language-text\">list</code>와는 달리, <code class=\"language-text\">ndarray</code>에서는 모든 원소가 같은 자료형을 가져야 합니다. 따라서 여러 자료형이 섞여있는 리스트를 <code class=\"language-text\">ndarray</code>로 변환할 경우 더 큰 자료형으로 변환됩니다. 따로 변환을 원하는 자료형이 있을 경우에는 <code class=\"language-text\">astype()</code> 매서드를 이용하여 변경이 가능합니다.\n<code class=\"language-text\">ndarray</code> 내 원소들의 데이터 타입은 <code class=\"language-text\">dtype</code>을 사용하여 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">list1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\narray1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array1<span class=\"token punctuation\">,</span> array1<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\n\nlist2<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span>\narray2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array2<span class=\"token punctuation\">,</span> array2<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\n\nlist3<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.7</span><span class=\"token punctuation\">]</span>\narray3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>list3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token string\">'int32'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array3<span class=\"token punctuation\">,</span> array3<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[1 2 3] int32\n['1' '2' 'test'] &lt;U11\n[1 3 4] int32</code></pre></div>\n<p>첫 번째 리스트의 경우 모든 원소가 <code class=\"language-text\">int32</code> 자료형이기 때문에 <code class=\"language-text\">ndarray</code>형으로 변환시켰을 때 <code class=\"language-text\">int32</code> 자료형 원소들을 가진 행렬이 자동으로 생성됩니다. 한편 두 번째 리스트의 경우 원소에 정수와 문자열이 섞여 있기 때문에 <code class=\"language-text\">&lt;U11</code> 형의 문자열로 모든 원소가 변환되어 저장이 됩니다. 세 번째 리스트의 경우 모든 원소가 실수형이지만, <code class=\"language-text\">astype(int32)</code> 매서드를 사용하였기 때문에 모든 원소가 <code class=\"language-text\">int32</code> 형으로 소숫점 아래를 버린 <code class=\"language-text\">ndarray</code> 가 생성됩니다.</p>\n<h3 id=\"33-ndarray를-편리하게-생성하기---arange-zeros-ones\" style=\"position:relative;\"><a href=\"#33-ndarray%EB%A5%BC-%ED%8E%B8%EB%A6%AC%ED%95%98%EA%B2%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0---arange-zeros-ones\" aria-label=\"33 ndarray를 편리하게 생성하기   arange zeros ones permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 ndarray를 편리하게 생성하기 - arange, zeros, ones</h3>\n<p><code class=\"language-text\">arange()</code>, <code class=\"language-text\">zeros()</code> , <code class=\"language-text\">ones()</code> 매서드를 사용하면 쉽게 ndarray를 생성하고 초기화할 수 있습니다.</p>\n<p><code class=\"language-text\">arange()</code> 매서드는 파이썬의 <code class=\"language-text\">range()</code> 와 유사하게, 특정한 범위에서 순차적으로 ndarray의 데이터 값으로 변환해 줍니다. <code class=\"language-text\">zeros()</code> 매서드와 <code class=\"language-text\">ones()</code> 매서드는 튜플 형태의 shape 값을 입력하면 모든 값을 각각 0과 1로 채운 해당 shape를 가진 ndarray를 반환합니다. 함수 인자로 자료형을 설정해 줄 수 있으며, 함수 인자를 정해주지 않으면 기본값으로 <code class=\"language-text\">float64</code> 를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span> arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n\nzero_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>zero_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>zero_array<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span> zero_array<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\none_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">'int32'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>one_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>one_array<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span> one_array<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[ 1  3  5  7  9 11 13]\nint32 (7,)\n[[0. 0.]\n [0. 0.]\n [0. 0.]]\nfloat64 (3, 2)\n[[1 1 1]\n [1 1 1]]\nint32 (2, 3)</code></pre></div>\n<p><code class=\"language-text\">array</code>에는 1에서 시작하여 2 씩 증가하며, 15 미만의 값까지를 저장한 <code class=\"language-text\">ndarray</code>가 저장됩니다.<code class=\"language-text\">zero_array</code> 와 <code class=\"language-text\">one_array</code>에는 지정한 크기와 자료형에 맞게 각각 0과 1로 채워진 <code class=\"language-text\">ndarray</code>가 저장됩니다.</p>\n<h3 id=\"34-ndarray의-차원과-크기를-변경하는-reshape\" style=\"position:relative;\"><a href=\"#34-ndarray%EC%9D%98-%EC%B0%A8%EC%9B%90%EA%B3%BC-%ED%81%AC%EA%B8%B0%EB%A5%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EB%8A%94-reshape\" aria-label=\"34 ndarray의 차원과 크기를 변경하는 reshape permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4 ndarray의 차원과 크기를 변경하는 reshape()</h3>\n<p><code class=\"language-text\">reshape()</code> 매서드는 <code class=\"language-text\">ndarray</code>를 원하는 차원과 크기로 변환할 수 있습니다. 이때 바꾸고자 하는 사이즈로 변경이 불가능할 경우 (처음 <code class=\"language-text\">ndarray</code>과 나중 <code class=\"language-text\">ndarray</code>의 원소 수가 다른 경우)에는 에러가 발생합니다. 함수 인자로 -1 을 사용하는 경우에는 원래 <code class=\"language-text\">ndarray</code>와 호환되는 새로운 차원과 크기로 자동으로 변환시켜 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array1<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array1:\\n'</span><span class=\"token punctuation\">,</span> array1<span class=\"token punctuation\">)</span>\n\narray2<span class=\"token operator\">=</span>array1<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array2:\\n'</span><span class=\"token punctuation\">,</span> array2<span class=\"token punctuation\">)</span>\n\narray3<span class=\"token operator\">=</span>array1<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array3:\\n'</span><span class=\"token punctuation\">,</span> array3<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">array1:\n [0 1 2 3 4 5 6 7]\narray2:\n [[[0 1]\n  [2 3]]\n\n [[4 5]\n  [6 7]]]\narray3:\n [[0 1]\n [2 3]\n [4 5]\n [6 7]]</code></pre></div>\n<p><code class=\"language-text\">array2</code> 는 원소가 8개인 <code class=\"language-text\">array1</code> 을 2x2x2의 형태로 변환하여 저장합니다. <code class=\"language-text\">array3</code>은 <code class=\"language-text\">array1</code>을 4개의 행을 갖도록, 4x2의 형태로 자동으로 변환하여 저장합니다.</p>\n<h3 id=\"35-넘파이의-ndarray의-데이터-세트-선택하기--인덱싱indexing\" style=\"position:relative;\"><a href=\"#35-%EB%84%98%ED%8C%8C%EC%9D%B4%EC%9D%98-ndarray%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%B8%ED%8A%B8-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0--%EC%9D%B8%EB%8D%B1%EC%8B%B1indexing\" aria-label=\"35 넘파이의 ndarray의 데이터 세트 선택하기  인덱싱indexing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5 넘파이의 ndarray의 데이터 세트 선택하기- 인덱싱(Indexing)</h3>\n<h4 id=\"351-단일-값-추출\" style=\"position:relative;\"><a href=\"#351-%EB%8B%A8%EC%9D%BC-%EA%B0%92-%EC%B6%94%EC%B6%9C\" aria-label=\"351 단일 값 추출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5.1 단일 값 추출</h4>\n<p>일반적인 파이썬에서의 <code class=\"language-text\">list</code>와 같은 방법으로, <code class=\"language-text\">ndarray</code>에서 구하고자하는 위치의 인덱스 값을 [] 안에 넣어 단일 값을 찾거나, 수정할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'row=1, col=2 가 가리키는 값:'</span><span class=\"token punctuation\">,</span>  array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'row=1, col=2 가 가리키는 값:'</span><span class=\"token punctuation\">,</span>  array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">row=1, col=2 가 가리키는 값: 6\nrow=1, col=2 가 가리키는 값: 5</code></pre></div>\n<h4 id=\"352-슬라이싱\" style=\"position:relative;\"><a href=\"#352-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8B%B1\" aria-label=\"352 슬라이싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5.2 슬라이싱</h4>\n<p><code class=\"language-text\">:</code> 기호를 이용해 연속한 데이터를 슬라이싱하여 추출할 수 있습니다. <code class=\"language-text\">:</code> 기호를 사이에 두고 시작 인덱스와 종료 인덱스를 표시하면 시작 ~ 종료-1 인덱스의 위치에 있는 데이터의 <code class=\"language-text\">ndarray</code>를 반환합니다. 시작/끝 인자가 생략되면 자동으로 맨 처음/맨 끝 인덱스로 간주됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array[3:7]\\n'</span><span class=\"token punctuation\">,</span>  array<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\narray2<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array2[0:2,0:2]\\n'</span><span class=\"token punctuation\">,</span>  array2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array2[1:,1:2]\\n'</span><span class=\"token punctuation\">,</span>  array2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array2[:2,0]\\n'</span><span class=\"token punctuation\">,</span>  array2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">array[3:7]\n [4 5 6 7]\narray2[0:2,0:2]\n [[1 2]\n [4 5]]\narray2[1:,1:2]\n [[5]\n [8]]\narray2[:2,0]\n [1 4]</code></pre></div>\n<h4 id=\"353-팬시-인덱싱\" style=\"position:relative;\"><a href=\"#353-%ED%8C%AC%EC%8B%9C-%EC%9D%B8%EB%8D%B1%EC%8B%B1\" aria-label=\"353 팬시 인덱싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5.3 팬시 인덱싱</h4>\n<p>팬시 인덱싱 (Fancy Indexing) 은 <code class=\"language-text\">list</code> 나 <code class=\"language-text\">ndarray</code> 로 인덱스 집합을 지정하면 해당 위치의 인덱스에 해당하는 <code class=\"language-text\">ndarray</code>를 반환하는 인덱싱 방식입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array[[0,2],2]\\n'</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">array[[0,2],2]\n [3 9]</code></pre></div>\n<p><code class=\"language-text\">array[[0,2],2]</code> 는 <code class=\"language-text\">array</code>의 0행과 2행의 2번쨰 열만 인덱싱하여 새로운 <code class=\"language-text\">ndarray</code> [3 9] 를 리턴합니다.</p>\n<h4 id=\"354-불린-인덱싱\" style=\"position:relative;\"><a href=\"#354-%EB%B6%88%EB%A6%B0-%EC%9D%B8%EB%8D%B1%EC%8B%B1\" aria-label=\"354 불린 인덱싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5.4 불린 인덱싱</h4>\n<p>불린 인덱싱 (Boolean Indexing) 은 조건 필터링과 검색을 동시에 할 수 있기 때문에 매우 자주 사용되는 인덱싱 방식입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'array[array>5]\\n'</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>array<span class=\"token operator\">></span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">array[array>5]\n [6 7 8 9]</code></pre></div>\n<p><code class=\"language-text\">ndarray</code> 의 인덱스로 조건을 넣어주면 그 조건을 만족하는 값들만 필터링하요 새로운 <code class=\"language-text\">ndarray</code> 를 리턴합니다.</p>\n<h3 id=\"36-행렬의-정렬---sort와-argsort\" style=\"position:relative;\"><a href=\"#36-%ED%96%89%EB%A0%AC%EC%9D%98-%EC%A0%95%EB%A0%AC---sort%EC%99%80-argsort\" aria-label=\"36 행렬의 정렬   sort와 argsort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.6 행렬의 정렬 - sort()와 argsort()</h3>\n<h4 id=\"361-행렬-정렬\" style=\"position:relative;\"><a href=\"#361-%ED%96%89%EB%A0%AC-%EC%A0%95%EB%A0%AC\" aria-label=\"361 행렬 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.6.1 행렬 정렬</h4>\n<p>행렬을 정렬하기 위해서는 <code class=\"language-text\">sort()</code> 매서드를 사용하면 됩니다. 기본적으로 오름차순 정렬을 수행하며, <code class=\"language-text\">sort()[::-1]</code> 을 이용하면 내림차순 정렬을 수행합니다.</p>\n<p><code class=\"language-text\">sort()</code>를 호출하는 방법에는 <code class=\"language-text\">np.sort()</code> 와 <code class=\"language-text\">ndarray.sort()</code>가 있습니다. <code class=\"language-text\">np.sort()</code>는 원 행렬을 유지한 채 정렬된 행렬을 새롭게 생성하여 리턴하는 반면, <code class=\"language-text\">ndarray.sort()</code> 는 원 행렬 자체를 정렬된 상태로 변환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">org_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'원본 행렬:'</span><span class=\"token punctuation\">,</span> org_array<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'np.sort 호출 후 반환된 정렬 행렬:'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>org_array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'np.sort 호출 후 원본 행렬:'</span><span class=\"token punctuation\">,</span> org_array<span class=\"token punctuation\">)</span>\n\norg_array<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ndarray.sort 호출 후 원본 행렬:'</span><span class=\"token punctuation\">,</span> org_array<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">원본 행렬: [3 1 9 5]\nnp.sort 호출 후 반환된 정렬 행렬: [9 5 3 1]\nnp.sort 호출 후 원본 행렬: [3 1 9 5]\nndarray.sort 호출 후 원본 행렬: [1 3 5 9</code></pre></div>\n<p>행렬이 2차원 이상인 경우 <code class=\"language-text\">axis</code> 값을 함수인자로 제공하여 축 방향의 정렬을 수행할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">org_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'원본 행렬:\\n'</span><span class=\"token punctuation\">,</span> org_array<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'열 방향 정렬:\\n'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>org_array<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'행 방향 정렬:\\n'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>org_array<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">원본 행렬:\n [[9 8 7]\n [6 5 4]\n [3 2 1]]\n열 방향 정렬:\n [[3 2 1]\n [6 5 4]\n [9 8 7]]\n행 방향 정렬:\n [[7 8 9]\n [4 5 6]\n [1 2 3]]</code></pre></div>\n<h4 id=\"362-정렬된-행렬의-인덱스-반환하기\" style=\"position:relative;\"><a href=\"#362-%EC%A0%95%EB%A0%AC%EB%90%9C-%ED%96%89%EB%A0%AC%EC%9D%98-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%B0%98%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"362 정렬된 행렬의 인덱스 반환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.6.2 정렬된 행렬의 인덱스 반환하기</h4>\n<p>원본 행렬이 정렬되었을 때 기존 원본 행렬의 원본에 대한 인덱스를 필요로 할 때 np.argsort()를 이용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mike'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sarah'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Kate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Samuel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nscore_array<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성적 오름차순 정렬:'</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>score_array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsort_indices_asc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span>score_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성적 오름차순 정렬 시 score_array의 인덱스:'</span><span class=\"token punctuation\">,</span> sort_indices_asc<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성적 오름차순으로 name_array의 이름 출력:'</span><span class=\"token punctuation\">,</span> name_array<span class=\"token punctuation\">[</span>sort_indices_asc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">성적 오름차순 정렬: [78 84 88 95 98]\n성적 오름차순 정렬 시 score_array의 인덱스: [0 2 4 1 3]\n성적 오름차순으로 name_array의 이름 출력: ['John' 'Sarah' 'Samuel' 'Mike' 'Kate']</code></pre></div>\n<p>다음과 같은 예시에서, 학생들의 점수를 오름차순으로 정렬하고 각 점수에 대응되는 학생을 찾기 위해 점수에 대한 원본 행렬에서의 인덱스가 필요하므로 <code class=\"language-text\">argsort()</code>를 이용하여 해당 과정을 수행해 줄 수 있습니다.</p>\n<h3 id=\"37-선형대수-연산---행렬-내적과-전치-행렬-구하기\" style=\"position:relative;\"><a href=\"#37-%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98-%EC%97%B0%EC%82%B0---%ED%96%89%EB%A0%AC-%EB%82%B4%EC%A0%81%EA%B3%BC-%EC%A0%84%EC%B9%98-%ED%96%89%EB%A0%AC-%EA%B5%AC%ED%95%98%EA%B8%B0\" aria-label=\"37 선형대수 연산   행렬 내적과 전치 행렬 구하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.7 선형대수 연산 - 행렬 내적과 전치 행렬 구하기</h3>\n<h4 id=\"371-행렬-내적-행렬-곱\" style=\"position:relative;\"><a href=\"#371-%ED%96%89%EB%A0%AC-%EB%82%B4%EC%A0%81-%ED%96%89%EB%A0%AC-%EA%B3%B1\" aria-label=\"371 행렬 내적 행렬 곱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.7.1 행렬 내적 (행렬 곱)</h4>\n<p>행렬의 내적은 np.dot()을 이용하여 수행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">A <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nB <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ndot_product <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'행렬 내적 결과 \\n'</span><span class=\"token punctuation\">,</span> dot_product<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">행렬 내적 결과\n [[ 58  64]\n [139 154]]</code></pre></div>\n<h4 id=\"372-전치-행렬\" style=\"position:relative;\"><a href=\"#372-%EC%A0%84%EC%B9%98-%ED%96%89%EB%A0%AC\" aria-label=\"372 전치 행렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.7.2 전치 행렬</h4>\n<p>전치 행렬은 np.transpose()를 이용하여 구할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">A<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ntranspose_mat<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'전치 행렬 \\n'</span><span class=\"token punctuation\">,</span>transpose_mat<span class=\"token punctuation\">)</span></code></pre></div>\n<p>[output]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">전치 행렬\n [[1 3]\n [2 4]]</code></pre></div>\n<p>Chapter 1 의 나머지 내용은 <a href=\"https://kunheekimkr.github.io/ML/chapter1-2/\">다음 글</a> 에서 이어서 설명하겠습니다.</p>","frontmatter":{"title":"[파이썬 머신러닝 완벽 가이드] 1.파이썬 기반의 머신 러닝과 생태계 이해(1)","date":"January 24, 2022"}}},"pageContext":{"slug":"/ML/chapter1-1/","previous":{"fields":{"slug":"/ML/pymldg/"},"frontmatter":{"title":"[파이썬 머신러닝 완벽 가이드] 소개"}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}